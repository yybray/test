shiro-1.1.0
一、
	1.shiro-all.jar 包含全部依赖jar包
	
	2.基本功能：
		Authentication：身份认证/登录，验证用户是不是拥有相应的身份；
		Authorization：授权，即权限验证，验证某个已认证的用户是否拥有某个权限；即判断用户是否能做事情，常见的如：验证某个用户是否拥有某个角色。或者细粒度的验证某个用户对某个资源是否具有某个权限；
		Session Manager：会话管理，即用户登录后就是一次会话，在没有退出之前，它的所有信息都在会话中；会话可以是普通JavaSE环境的，也可以是如Web环境的；
		Cryptography：加密，保护数据的安全性，如密码加密存储到数据库，而不是明文存储；
		Web Support：Web 支持，可以非常容易的集成到Web 环境；
		Caching：缓存，比如用户登录后，其用户信息、拥有的角色/权限不必每次去查，这样可以提高效率；
		Concurrency：shiro 支持多线程应用的并发验证，即如在一个线程中开启另一个线程，能把权限自动传播过去；
		Testing：提供测试支持；
		Run As：允许一个用户假装为另一个用户（如果他们允许）的身份进行访问；
		Remember Me：记住我，这个是非常常见的功能，即一次登录后，下次再来的话不用登录了。

	3.主要对象
		1).Subject：
			代表当前用户对象。
		2).SecurityManager：
			安全管理器，所有安全相关的操作都和它相关，它管理所有的Subject。
		3).Realm：
			获取数据，以便SecurityManager进行验证。相当于是个数据源

二、登录注销（ini方式） 详见：shiro_01_login_logout
	1.Subject的login方法中传入 UsernamePasswordToken对象进行登录
	2.Subject的logout注销

三、Realm
	* 报错找不到类引入：
		commons-beanutils.jar
		commons-logging.jar
	1.自定义单个realm进行认证/验证 详见：shiro_02_realm SingleRealm.java
		1）.自定义Realm继承Realm重写以下方法
			//认证/验证逻辑
			public AuthenticationInfo getAuthenticationInfo(AuthenticationToken token){}
			//realm的名字
			public String getName(){}
			//设置支持的token
			public boolean supports(AuthenticationToken token){}
			
		2）.在ini文件中指定自定义的realm
			[main]
			myRealm1=com.realm.MyRealm1
			securityManager.realms=$myRealm1

	2.多个realm 详见：shiro_02_realm MultiRealms.java
		1）.在ini文件中指定自定义的realm
			[main]
			myRealm1=com.realm.MyRealm1
			myRealm2=com.realm.MyRealm2
			securityManager.realms=$myRealm1,$myRealm2
			
		* securityManager会按照realms指定的顺序进行身份认证。此处我们使用显示指定顺序的方式指定了Realm的顺序，
			如果删除“securityManager.realms=$myRealm1,$myRealm2”，
			那么securityManager会按照realm声明的顺序进行使用（即无需设置realms属性，其会自动发现），
			当我们显示指定realm 后， 其他没有指定realm 将被忽略，如：
			“securityManager.realms=$myRealm1”，那么myRealm2 不会被自动设置进去。
		
	* 一般继承AuthorizingRealm（授权）即可；其继承了AuthenticatingRealm（即身份验证），而且也间接继承了CachingRealm（带有缓存实现）
	* 具体继承关系 ：shiro默认提供的Realm.jpg





		